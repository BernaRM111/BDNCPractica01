/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package org.uv.bdncpractica01correccion;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Berna
 */
public class ProductosView extends javax.swing.JInternalFrame {

    private DAOProductos daoE = new DAOProductos();
    private ProductoTableModel<Producto> pro = null;

    /**
     * Creates new form ProductosView
     */
    public ProductosView() {
        initComponents();
//        String[] columnNames = {"Clave", "Nombre", "Precio Compra", "Precio Venta"};
//        List<Producto> lstProductos = daoE.findAll();
//        pro = new ProductoTableModel<Producto>(columnNames, lstProductos) {
//
//            @Override
//            public Object getValueAt(int rowIndex, int columnIndex) {
//                switch (columnIndex) {
//                    case 0:return lstValores.get(rowIndex).getId();
//                    case 1:return lstValores.get(rowIndex).getDescripcion();
//                    case 2:return lstValores.get(rowIndex).getPrecioCompra();
//                    case 3:return lstValores.get(rowIndex).getPrecioVenta();
//                    default:return null;
//                }
//            }
//
//        }; 
//                //        Producto p1 = new Producto();
//                //        p1.setId(1);
//                //        p1.setDescripcion("Jabon");
//                //        Producto p2 = new Producto();
//                //        p2.setId(2);
//                //        p2.setDescripcion("Otro");
//                //        
//                //        lstProducto.add(p1);
//                //        lstProducto.add(p2);
//        
////        ProductoTableModel pro = new ProductoTableModel(lstProducto);
//        jTable1.setModel(pro);
    }

//    private void fillTable() {
//        List<Producto> lstProductos = new ArrayList<>();
//        ProductoTableModel model = new ProductoTableModel {};
//        jTable1.setModel(model);
//    }
//    private void fillTable(){
//        Vector<Vector<Producto>> lstProductos = new Vector<>();
////        Vector <Producto> lstProductos = new Vector<>();
//        Vector <String> columnas = new Vector<>();
//        columnas.add("Clave");
//        columnas.add("Descripción");
//        columnas.add("Precio Venta");
//        columnas.add("Precio Compra");
//        
//        TableModel model= new DefaultTableModel(lstProductos, lstData);
//        jTable1.setModel(model);
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNuevo = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtPrecioCompra = new javax.swing.JTextField();
        txtPrecioVenta = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnBuscarTodos = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setTitle("Catalogo de Productos");

        jToolBar1.setRollover(true);

        btnNuevo.setText("Nuevo");
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNuevo);

        btnModificar.setText("Modificar");
        btnModificar.setFocusable(false);
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnModificar);

        btnEliminar.setText("Eliminar");
        btnEliminar.setFocusable(false);
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEliminar);

        btnGuardar.setText("Guardar");
        btnGuardar.setFocusable(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnGuardar);

        btnCancelar.setText("Cancelar");
        btnCancelar.setFocusable(false);
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar1.add(btnCancelar);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jLabel1.setText("Clave");

        jLabel2.setText("Descripción");

        jLabel3.setText("Precio venta");

        jLabel4.setText("Precio Compra");

        txtClave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClaveActionPerformed(evt);
            }
        });

        txtPrecioCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioCompraActionPerformed(evt);
            }
        });

        txtPrecioVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioVentaActionPerformed(evt);
            }
        });

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnBuscarTodos.setText("Buscar Todos");
        btnBuscarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTodosActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel3))
                            .addComponent(btnBuscarTodos))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPrecioVenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtClave, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrecioCompra))
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscar)))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBuscar)))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPrecioVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtPrecioCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscarTodos)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtClaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClaveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtClaveActionPerformed

    private void txtPrecioCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioCompraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioCompraActionPerformed

    private void txtPrecioVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioVentaActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtClave.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un ID para buscar");
        } else {
            try {
                int id = Integer.parseInt(txtClave.getText());
                Producto producto = daoE.findById(id);
                if (producto != null) {
                    txtDescripcion.setText(producto.getDescripcion());
                    txtPrecioCompra.setText(String.valueOf(producto.getPrecioCompra()));
                    txtPrecioVenta.setText(String.valueOf(producto.getPrecioVenta()));
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró un producto con el ID especificado");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "El ID debe ser un número entero");
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (txtDescripcion.getText().isEmpty() || txtPrecioCompra.getText().isEmpty() || txtPrecioVenta.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor complete todos los campos");
        } else {
            try {
                Producto p = new Producto();
                p.setDescripcion(txtDescripcion.getText());
                p.setPrecioCompra(Double.parseDouble(txtPrecioCompra.getText()));
                p.setPrecioVenta(Double.parseDouble(txtPrecioVenta.getText()));

                boolean res = daoE.save(p);
                if (res) {
                    JOptionPane.showMessageDialog(null, "Producto guardado correctamente");
                } else {
                    JOptionPane.showMessageDialog(null, "Error al guardar el producto");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Por favor ingrese un valor numérico válido para Precio Compra y Precio Venta");
            }
        }
//        Producto p = new Producto();
////        p.setId(Integer.parseInt(txtClave.getText()));
//        p.setDescripcion(txtDescripcion.getText());
//        p.setPrecioVenta(Double.parseDouble(txtPrecioVenta.getText()));
//        p.setPrecioCompra(Double.parseDouble(txtPrecioCompra.getText()));
//
//        DAOProductos daoE = new DAOProductos();
//        boolean res = daoE.save(p);
//        if (res) {
//            JOptionPane.showMessageDialog(this, "Se guardó correctamente");
//        } else {
//            JOptionPane.showMessageDialog(this, "Error al guardar");
//        }

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        if (txtClave.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un ID para modificar");
        } else {
            try {
                int id = Integer.parseInt(txtClave.getText());
                Producto producto = daoE.findById(id);
                if (producto != null) {
                    producto.setDescripcion(txtDescripcion.getText());
                    producto.setPrecioVenta(Double.parseDouble(txtPrecioVenta.getText()));
                    producto.setPrecioCompra(Double.parseDouble(txtPrecioCompra.getText()));
                    boolean success = daoE.edit(producto);
                    if (success) {
                        JOptionPane.showMessageDialog(null, "Producto modificado correctamente");
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al modificar el producto");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró un producto con el ID especificado");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "El ID debe ser un número entero");
            }
        }

    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnBuscarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTodosActionPerformed
        // TODO add your handling code here:
        String[] columnNames = {"Clave", "Nombre", "Precio Compra", "Precio Venta"};
        List<Producto> lstProductos = daoE.findAll();
        pro = new ProductoTableModel<Producto>(columnNames, lstProductos) {

            @Override
            public Object getValueAt(int rowIndex, int columnIndex) {
                switch (columnIndex) {
                    case 0:
                        return lstValores.get(rowIndex).getId();
                    case 1:
                        return lstValores.get(rowIndex).getDescripcion();
                    case 2:
                        return lstValores.get(rowIndex).getPrecioCompra();
                    case 3:
                        return lstValores.get(rowIndex).getPrecioVenta();
                    default:
                        return null;
                }
            }

        };
        //        Producto p1 = new Producto();
        //        p1.setId(1);
        //        p1.setDescripcion("Jabon");
        //        Producto p2 = new Producto();
        //        p2.setId(2);
        //        p2.setDescripcion("Otro");
        //        
        //        lstProducto.add(p1);
        //        lstProducto.add(p2);

//        ProductoTableModel pro = new ProductoTableModel(lstProducto);
        jTable1.setModel(pro);

    }//GEN-LAST:event_btnBuscarTodosActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        // TODO add your handling code here:
        txtClave.setText("");
        txtDescripcion.setText("");
        txtPrecioCompra.setText("");
        txtPrecioVenta.setText("");
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (txtClave.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor ingrese un ID para eliminar");
        } else {
            try {
                int idProducto = Integer.parseInt(txtClave.getText());
                Producto p = daoE.findById(idProducto);
                if (p != null) {
                    boolean res = daoE.delete(p);
                    if (res) {
                        JOptionPane.showMessageDialog(null, "Producto eliminado correctamente");
                    } else {
                        JOptionPane.showMessageDialog(null, "Error al eliminar el producto");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "No se encontró un producto con el ID especificado");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "El ID debe ser un número entero");
            }
        }
//        int idProducto = Integer.parseInt(txtClave.getText());
//
//        Producto p = new Producto();
//        p.setId(idProducto);
//
//        DAOProductos daoE = new DAOProductos();
//        boolean res = daoE.delete(p);
//        if (res) {
//            JOptionPane.showMessageDialog(this, "Se elimino correctamente");
//        } else {
//            JOptionPane.showMessageDialog(this, "Error al eliminar");
//        }
    }//GEN-LAST:event_btnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarTodos;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtPrecioCompra;
    private javax.swing.JTextField txtPrecioVenta;
    // End of variables declaration//GEN-END:variables
}
